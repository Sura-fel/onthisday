#!/data/data/com.termux/files/usr/bin/python
import datetime, json,argparse
from os import path as paths
from os import system
from random import randint
import requests

today = datetime.datetime.now()
date = today.strftime('%m/%d')
file_name = today.strftime('%m.%d.json')
url = 'https://api.wikimedia.org/feed/v1/wikipedia/en/onthisday/all/' + date 
path = f'/data/data/com.termux/files/home/.local/tmp/{file_name}'

def otd():
	if not paths.exists(path):
		
		try :
			response = requests.get(url)#, headers=headers)
			data = response.json()
			dict_data = data['selected']
			with open(path, 'x') as file:
				json.dump(dict_data,file, indent=2)
		
		except ConnectionError:
			print('No Connection')
			exit()
	
	with open(path,'r') as file:
		dict_data = json.load(file)
		#real_dict = json.dumps(dict_data,indent=2)
	
	try:	
		i = randint(0,(len(dict_data) -1))
		print(dict_data[i]['pages'][0]['title'],'\n',dict_data[i]['text'],'\n',dict_data[i]['pages'][0]["content_urls"]['mobile']['page'])
		del dict_data[i]
		with open(path,'w') as file:
			json.dump(dict_data,file)
	
	except ValueError:
		print('No more events on my database')
		exit()
	
parser = argparse.ArgumentParser()
parser.add_argument('--reset','-r',action='store_true',help="--reset delete locally stored data")
parser.add_argument('--date','-d',nargs=2,help="--date <m> <d>")
args = parser.parse_args()

if not(args.reset or args.date):
	otd()

elif args.reset:
	system(f'rm {path}')
	otd()

elif args.date:
	m,d = args.date
	url = 'https://api.wikimedia.org/feed/v1/wikipedia/en/onthisday/all/' + m + '/' + d
	file_name = f'{m}.{d}.json'
	path = f'/data/data/com.termux/files/home/.local/tmp/{file_name}'
	otd()